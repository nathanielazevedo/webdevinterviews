[
  {
    "id": "1",
    "title": "Syntax Error",
    "description": "A look at different Syntax Errors.",
    "questions": [
      "let str = 'This is a string with a syntax error;",
      "let num = 10; \nlet x = num.toFixed(2;",
      "var array = [1, 2, 3, 4, 5;",
      "var obj = {\n name: 'John' \n age: 30, \n city: 'New York'\n};",
      "var new = 'newThing';",
      "if (x > 5 {}"
    ],
    "explanations": [
      "Syntax errors are very common but also very obvious. The string in this question is missing a closing quotation mark.",
      "The method .toFixed is missing a closing parentheses."
    ]
  },
  {
    "id": "2",
    "title": "Reference Error",
    "description": "A look at different ReferenceErrors.",
    "questions": [
      "console.log(variable);",
      "var userName = 'John'; \nconsole.log(userNam); ",
      "function outerFunction() {\n var innerVariable = 'Hello';\n}\nconsole.log(innerVariable); ",
      "var obj = { name: 'John' }; \nconsole.log(obj.age);",
      "someFunction();"
    ],
    "explanations": [
      "Here, we are trying to reference a variable that has not been declared. Therefore, this code will throw a Reference Error."
    ]
  },
  {
    "id": "3",
    "title": "Type Error",
    "description": "A look at different TypeErrors.",
    "questions": [
      "var obj = { \n name: 'John',\n greet: function() {\n  console.log('Hello, ' + this.name);\n }\n};\nvar greetFunction = obj.greet;\ngreetFunction();",
      "var num = 10; \nnum();",
      "var obj = null; \nconsole.log(obj.property);",
      "var arr = [1, 2, 3]; \narr.toUpperCase();",
      "var str = null; \nconsole.log(str[0]);",
      "var num = 10; \nconsole.log(num.map(Number));"
    ],
    "explanations": []
  },
  {
    "id": "4",
    "title": "Range Error",
    "description": "A look at different RangeErrors.",
    "questions": [
      "var arr = new Array(-1);",
      "Number.MAX_SAFE_INTEGER + 1;",
      "'abc'.repeat(Infinity);",
      "new Date(2022, 12, 32);"
    ],
    "explanations": []
  }
]
