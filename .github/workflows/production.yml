name: Build, Test, and Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.yarnpkg.com/

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Build React app
        run: yarn build

      - name: Deploy to S3
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          aws s3 sync dist/ s3://webdevinterviews.com-react-app
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront cache
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1  # Replace with your region
          aws cloudfront create-invalidation --distribution-id https://dckefrit86zp8.cloudfront.net --paths "/*"

# name: Build and Deploy to S3
# on:
#   pull_request:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x]

#     steps:
#       - uses: actions/checkout@v1
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Install
#         run: |
#           yarn install
#       - name: Build
#         run: |
#           yarn build
#       - name: Deploy to S3
#         uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --delete --exclude 'images/*'
#         env:
#           AWS_S3_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET_NAME }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#           SOURCE_DIR: 'dist'
#           # SOURCE_DIR: 'dist/assets'
#           # DEST_DIR: 'assets'
#       - name: Invalidate CloudFront cache
#         run: |
#           aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/index.html"
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION }}
